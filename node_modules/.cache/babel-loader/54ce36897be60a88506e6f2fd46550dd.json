{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\burger-react-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENTS_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount > 0) {\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = { ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENTS_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({\n          totalPrice: newPrice,\n          ingredients: updatedIngredients\n        });\n        this.updatePurchaseState();\n      }\n    };\n  }\n\n  updatePurchaseState() {\n    const ingredients = { ...this.state.ingredients\n    };\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        price: this.state.totalPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["D:/React/burger-react-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENTS_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\n\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\nclass BurgerBuilder extends Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        ingredients: {\r\n            salad:0,\r\n            bacon:0,\r\n            cheese:0,\r\n            meat:0,\r\n        },\r\n        totalPrice:4,\r\n        purchasable: false,\r\n    }\r\n\r\n    updatePurchaseState (){\r\n        const ingredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        const sum = Object.keys(ingredients).map(igKey =>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum,el) =>{\r\n            return sum + el;\r\n        },0);\r\n        this.setState({purchasable: sum > 0});\r\n    }\r\n    addIngredientHandler= (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount +1 ;\r\n        const updatedIngredients = {...this.state.ingredients};\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENTS_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice:newPrice, ingredients:updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n    removeIngredientHandler= (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount > 0){\r\n            const updatedCount = oldCount -1 ;\r\n            const updatedIngredients = {...this.state.ingredients};\r\n            updatedIngredients[type] = updatedCount;\r\n            const priceDeduction = INGREDIENTS_PRICES[type];\r\n            const oldPrice = this.state.totalPrice;\r\n            const newPrice = oldPrice - priceDeduction;\r\n            this.setState({totalPrice:newPrice, ingredients:updatedIngredients});\r\n            this.updatePurchaseState();\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <=0\r\n        }\r\n        return(\r\n            <Aux>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                <BuildControls ingredientAdded={this.addIngredientHandler} ingredientRemoved={this.removeIngredientHandler}\r\n                disabled = {disabledInfo}\r\n                purchasable={this.state.purchasable}\r\n                price={this.state.totalPrice}/>\r\n                \r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}