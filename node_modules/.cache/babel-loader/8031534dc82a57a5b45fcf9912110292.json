{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\burger-react-app\\\\src\\\\components\\\\Burger\\\\Burger.js\";\nimport React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst burger = props => {\n  const transformedIngredient = Object.keys(props.ingredients).map(igKey => {\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      return /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n        type: igKey\n      }, igKey + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this);\n    });\n  }).reduce((arr, el) => {\n    // reduce JS array function allow us transform array into another thing the \n    // loop all elemnt and return them to the initial value \n    return arr.concat(el);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Burger,\n    children: [/*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), transformedIngredient, /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\nexport default burger;","map":{"version":3,"sources":["D:/React/burger-react-app/src/components/Burger/Burger.js"],"names":["React","classes","BurgerIngredient","burger","props","transformedIngredient","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,qBAAqB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EAC7BC,GAD6B,CACzBC,KAAK,IAAI;AACV,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,CAACG,CAAD,EAAGC,CAAH,KAAS;AACrD,0BAAO,QAAC,gBAAD;AAAgC,QAAA,IAAI,EAAEH;AAAtC,SAAuBA,KAAK,GAAC,CAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAP;AAGH,GAL6B,EAK3BI,MAL2B,CAKpB,CAACC,GAAD,EAAKC,EAAL,KAAY;AAAE;AACpB;AACA,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACH,GAR6B,EAQ5B,EAR4B,CAA9B;AAUA,sBACI;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACiB,MAAxB;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKb,qBAFL,eAGI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAlBD;;AAoBA,eAAeF,MAAf","sourcesContent":["import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    const transformedIngredient = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey+1} type={igKey} />;\r\n        });\r\n    }).reduce((arr,el) => { // reduce JS array function allow us transform array into another thing the \r\n        // loop all elemnt and return them to the initial value \r\n        return arr.concat(el)\r\n    },[]);\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredient}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;"]},"metadata":{},"sourceType":"module"}